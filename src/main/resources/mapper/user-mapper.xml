<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyt.community.dao.UserMapper">
    <!--映射文件，指定配置文件服务于哪个mapper接口-->

    <sql id="selectFields">
        <!--定义查询的字段，方便后续复用-->
        id, username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <sql id="insertFields">
        <!--定义增加的字段，方便后续复用-->
        username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <select id="selectById" resultType="User">
        <!--查询标签，id对应mapper接口中的方法名，当返回类型为不能识别的bean时需要用resultType指定-->
        select <include refid="selectFields"></include>
        from user
        <!--#{id}引入方法中的参数id-->
        where id = #{id}
    </select>

    <select id="selectByName" resultType="User">
        <!--对应selectByName方法-->
        select <include refid="selectFields"></include>
        from user
        where username = #{username}
    </select>

    <select id="selectByEmail" resultType="User">
        <!--对应selectByEmail方法-->
        select <include refid="selectFields"></include>
        from user
        where email = #{email}
    </select>

    <insert id="insertUser" parameterType="User" keyProperty="id">
        <!--查询标签，对应insertUser方法-->
        <!--parameterType:当参数是bean这样不能识别的类型时需要指明参数类型-->
        <!--keyProperty:增加用户时mysql会自动生成用户id，需要mybatis将该id填入到User中-->
        insert into user (<include refid="insertFields"></include>)
        values(#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{headerUrl}, #{createTime})
        <!--插入的值，为User类中的属性-->
    </insert>
    
    <update id="updateStatus">
        <!--修改标签，形参类型和返回类型均可以识别，所以不需要parameterType或resultType-->
        update user set status = #{status} where id = #{id}
    </update>

    <update id="updateHeader">
        update user set header_url = #{headerUrl} where id = #{id}
    </update>

    <update id="updatePassword">
        update user set password = #{password} where id = #{id}
    </update>

</mapper>
